class Solution {
public:

bool getsmallestNumber(string pattern, string &ans, vector<bool>&used, int num){
    if(ans.size()==pattern.size()+1){
        return true;
    }
    for(int i=1; i<=9; i++){
        if(used[i]==true) continue;
        //  TRY
        used[i]=true;
        ans.push_back(i+'0');
        // EXPLORE
        if(num==0 || (pattern[num-1]=='D' && ans[num-1]>ans[num]) || (pattern[num-1]=='I' && ans[num-1]<ans[num])){
            if(getsmallestNumber(pattern, ans, used, ans.size())) return true;
        };
        // UNDO
        used[i]=false;
        ans.pop_back();
    }
    return false;
}
    string smallestNumber(string pattern) {
        string ans="";
        vector<bool>used(9, false);
        getsmallestNumber(pattern, ans, used, 0);
        return ans;
    }
};
